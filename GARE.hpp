// File generated by GARE - Gab RGSS Exporter
// RGSS Binary version: RGSS300.dll


// Include
#include <Windows.h>


// Definitions
#ifndef VALUE
typedef unsigned long VALUE;
#endif

#ifndef ANYARGS
#	ifdef __cplusplus
#		define ANYARGS ...
#	else
#		define ANYARGS 
#	endif
#endif

#ifdef GARE_DEFINE_RUBY_UTILS
#	define FIXNUM_FLAG 0x01
#	define SIGNED_VALUE long
#	define INT2FIX(i) ((VALUE)(((SIGNED_VALUE)(i))<<1 | FIXNUM_FLAG))
#endif


// Prototypes

// Class Allocation Method
typedef VALUE (*Class_allocate_gareproto)(VALUE);
// Bitmap Functions
typedef VALUE (*Bitmap_dispose_gareproto)(VALUE);
typedef VALUE (*Bitmap_is_disposed_gareproto)(VALUE);
typedef VALUE (*Bitmap_width_gareproto)(VALUE);
typedef VALUE (*Bitmap_height_gareproto)(VALUE);
typedef VALUE (*Bitmap_rect_gareproto)(VALUE);
typedef VALUE (*Bitmap_blt_gareproto)(ANYARGS);
typedef VALUE (*Bitmap_stretch_blt_gareproto)(ANYARGS);
typedef VALUE (*Bitmap_fill_rect_gareproto)(ANYARGS);
typedef VALUE (*Bitmap_gradient_fill_rect_gareproto)(ANYARGS);
typedef VALUE (*Bitmap_clear_gareproto)(VALUE);
typedef VALUE (*Bitmap_clear_rect_gareproto)(ANYARGS);
typedef VALUE (*Bitmap_get_pixel_gareproto)(VALUE, VALUE, VALUE);
typedef VALUE (*Bitmap_set_pixel_gareproto)(VALUE, VALUE, VALUE, VALUE);
typedef VALUE (*Bitmap_hue_change_gareproto)(VALUE, VALUE);
typedef VALUE (*Bitmap_blur_gareproto)(VALUE);
typedef VALUE (*Bitmap_radial_blur_gareproto)(VALUE, VALUE, VALUE);
typedef VALUE (*Bitmap_font_gareproto)(VALUE);
typedef VALUE (*Bitmap_font_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Bitmap_draw_text_gareproto)(ANYARGS);
typedef VALUE (*Bitmap_text_size_gareproto)(VALUE, VALUE);
typedef VALUE (*Bitmap_initialize_gareproto)(ANYARGS);
// Color Functions
typedef VALUE (*Color__load_gareproto)(VALUE, VALUE);
typedef VALUE (*Color_set_gareproto)(ANYARGS);
typedef VALUE (*Color__dump_gareproto)(VALUE, VALUE);
typedef VALUE (*Color_red_gareproto)(VALUE);
typedef VALUE (*Color_red_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Color_green_gareproto)(VALUE);
typedef VALUE (*Color_green_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Color_blue_gareproto)(VALUE);
typedef VALUE (*Color_blue_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Color_alpha_gareproto)(VALUE);
typedef VALUE (*Color_alpha_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Color_initialize_gareproto)(ANYARGS);
// Font Functions
typedef VALUE (*Font_name_gareproto)(VALUE);
typedef VALUE (*Font_name_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_size_gareproto)(VALUE);
typedef VALUE (*Font_size_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_bold_gareproto)(VALUE);
typedef VALUE (*Font_bold_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_italic_gareproto)(VALUE);
typedef VALUE (*Font_italic_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_outline_gareproto)(VALUE);
typedef VALUE (*Font_outline_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_shadow_gareproto)(VALUE);
typedef VALUE (*Font_shadow_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_color_gareproto)(VALUE);
typedef VALUE (*Font_color_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_out_color_gareproto)(VALUE);
typedef VALUE (*Font_out_color_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Font_initialize_gareproto)(ANYARGS);
// Plane Functions
typedef VALUE (*Plane_dispose_gareproto)(VALUE);
typedef VALUE (*Plane_is_disposed_gareproto)(VALUE);
typedef VALUE (*Plane_viewport_gareproto)(VALUE);
typedef VALUE (*Plane_viewport_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_bitmap_gareproto)(VALUE);
typedef VALUE (*Plane_bitmap_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_visible_gareproto)(VALUE);
typedef VALUE (*Plane_visible_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_z_gareproto)(VALUE);
typedef VALUE (*Plane_z_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_ox_gareproto)(VALUE);
typedef VALUE (*Plane_ox_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_oy_gareproto)(VALUE);
typedef VALUE (*Plane_oy_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_zoom_x_gareproto)(VALUE);
typedef VALUE (*Plane_zoom_x_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_zoom_y_gareproto)(VALUE);
typedef VALUE (*Plane_zoom_y_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_opacity_gareproto)(VALUE);
typedef VALUE (*Plane_opacity_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_blend_type_gareproto)(VALUE);
typedef VALUE (*Plane_blend_type_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_color_gareproto)(VALUE);
typedef VALUE (*Plane_color_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_tone_gareproto)(VALUE);
typedef VALUE (*Plane_tone_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Plane_initialize_gareproto)(ANYARGS);
// Rect Functions
typedef VALUE (*Rect__load_gareproto)(VALUE, VALUE);
typedef VALUE (*Rect_set_gareproto)(ANYARGS);
typedef VALUE (*Rect_empty_gareproto)(VALUE);
typedef VALUE (*Rect__dump_gareproto)(VALUE, VALUE);
typedef VALUE (*Rect_x_gareproto)(VALUE);
typedef VALUE (*Rect_x_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Rect_y_gareproto)(VALUE);
typedef VALUE (*Rect_y_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Rect_width_gareproto)(VALUE);
typedef VALUE (*Rect_width_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Rect_height_gareproto)(VALUE);
typedef VALUE (*Rect_height_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Rect_initialize_gareproto)(ANYARGS);
// Sprite Functions
typedef VALUE (*Sprite_dispose_gareproto)(VALUE);
typedef VALUE (*Sprite_is_disposed_gareproto)(VALUE);
typedef VALUE (*Sprite_flash_gareproto)(VALUE, VALUE, VALUE);
typedef VALUE (*Sprite_update_gareproto)(VALUE);
typedef VALUE (*Sprite_width_gareproto)(VALUE);
typedef VALUE (*Sprite_height_gareproto)(VALUE);
typedef VALUE (*Sprite_viewport_gareproto)(VALUE);
typedef VALUE (*Sprite_viewport_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_bitmap_gareproto)(VALUE);
typedef VALUE (*Sprite_bitmap_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_src_rect_gareproto)(VALUE);
typedef VALUE (*Sprite_src_rect_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_visible_gareproto)(VALUE);
typedef VALUE (*Sprite_visible_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_x_gareproto)(VALUE);
typedef VALUE (*Sprite_x_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_y_gareproto)(VALUE);
typedef VALUE (*Sprite_y_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_z_gareproto)(VALUE);
typedef VALUE (*Sprite_z_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_ox_gareproto)(VALUE);
typedef VALUE (*Sprite_ox_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_oy_gareproto)(VALUE);
typedef VALUE (*Sprite_oy_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_zoom_x_gareproto)(VALUE);
typedef VALUE (*Sprite_zoom_x_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_zoom_y_gareproto)(VALUE);
typedef VALUE (*Sprite_zoom_y_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_angle_gareproto)(VALUE);
typedef VALUE (*Sprite_angle_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_wave_amp_gareproto)(VALUE);
typedef VALUE (*Sprite_wave_amp_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_wave_length_gareproto)(VALUE);
typedef VALUE (*Sprite_wave_length_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_wave_speed_gareproto)(VALUE);
typedef VALUE (*Sprite_wave_speed_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_wave_phase_gareproto)(VALUE);
typedef VALUE (*Sprite_wave_phase_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_mirror_gareproto)(VALUE);
typedef VALUE (*Sprite_mirror_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_bush_depth_gareproto)(VALUE);
typedef VALUE (*Sprite_bush_depth_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_bush_opacity_gareproto)(VALUE);
typedef VALUE (*Sprite_bush_opacity_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_opacity_gareproto)(VALUE);
typedef VALUE (*Sprite_opacity_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_blend_type_gareproto)(VALUE);
typedef VALUE (*Sprite_blend_type_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_color_gareproto)(VALUE);
typedef VALUE (*Sprite_color_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_tone_gareproto)(VALUE);
typedef VALUE (*Sprite_tone_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Sprite_initialize_gareproto)(ANYARGS);
// Table Functions
typedef VALUE (*Table__load_gareproto)(VALUE, VALUE);
typedef VALUE (*Table_resize_gareproto)(ANYARGS);
typedef VALUE (*Table__dump_gareproto)(VALUE, VALUE);
typedef VALUE (*Table_aref_gareproto)(ANYARGS);
typedef VALUE (*Table_aref_set_gareproto)(ANYARGS);
typedef VALUE (*Table_xsize_gareproto)(VALUE);
typedef VALUE (*Table_ysize_gareproto)(VALUE);
typedef VALUE (*Table_zsize_gareproto)(VALUE);
typedef VALUE (*Table_initialize_gareproto)(ANYARGS);
// Tilemap Functions
typedef VALUE (*Tilemap_dispose_gareproto)(VALUE);
typedef VALUE (*Tilemap_is_disposed_gareproto)(VALUE);
typedef VALUE (*Tilemap_update_gareproto)(VALUE);
typedef VALUE (*Tilemap_viewport_gareproto)(VALUE);
typedef VALUE (*Tilemap_viewport_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_bitmaps_gareproto)(VALUE);
typedef VALUE (*Tilemap_map_data_gareproto)(VALUE);
typedef VALUE (*Tilemap_map_data_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_flash_data_gareproto)(VALUE);
typedef VALUE (*Tilemap_flash_data_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_flags_gareproto)(VALUE);
typedef VALUE (*Tilemap_flags_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_visible_gareproto)(VALUE);
typedef VALUE (*Tilemap_visible_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_ox_gareproto)(VALUE);
typedef VALUE (*Tilemap_ox_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_oy_gareproto)(VALUE);
typedef VALUE (*Tilemap_oy_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tilemap_initialize_gareproto)(ANYARGS);
// Tone Functions
typedef VALUE (*Tone__load_gareproto)(VALUE, VALUE);
typedef VALUE (*Tone_set_gareproto)(ANYARGS);
typedef VALUE (*Tone__dump_gareproto)(VALUE, VALUE);
typedef VALUE (*Tone_red_gareproto)(VALUE);
typedef VALUE (*Tone_red_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tone_green_gareproto)(VALUE);
typedef VALUE (*Tone_green_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tone_blue_gareproto)(VALUE);
typedef VALUE (*Tone_blue_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tone_gray_gareproto)(VALUE);
typedef VALUE (*Tone_gray_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Tone_initialize_gareproto)(ANYARGS);
// Viewport Functions
typedef VALUE (*Viewport_dispose_gareproto)(VALUE);
typedef VALUE (*Viewport_flash_gareproto)(VALUE, VALUE, VALUE);
typedef VALUE (*Viewport_update_gareproto)(VALUE);
typedef VALUE (*Viewport_rect_gareproto)(VALUE);
typedef VALUE (*Viewport_rect_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_visible_gareproto)(VALUE);
typedef VALUE (*Viewport_visible_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_z_gareproto)(VALUE);
typedef VALUE (*Viewport_z_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_ox_gareproto)(VALUE);
typedef VALUE (*Viewport_ox_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_oy_gareproto)(VALUE);
typedef VALUE (*Viewport_oy_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_color_gareproto)(VALUE);
typedef VALUE (*Viewport_color_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_tone_gareproto)(VALUE);
typedef VALUE (*Viewport_tone_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Viewport_initialize_gareproto)(ANYARGS);
// Window Functions
typedef VALUE (*Window_dispose_gareproto)(VALUE);
typedef VALUE (*Window_is_disposed_gareproto)(VALUE);
typedef VALUE (*Window_update_gareproto)(VALUE);
typedef VALUE (*Window_move_gareproto)(VALUE, VALUE, VALUE, VALUE, VALUE);
typedef VALUE (*Window_is_open_gareproto)(VALUE);
typedef VALUE (*Window_is_close_gareproto)(VALUE);
typedef VALUE (*Window_viewport_gareproto)(VALUE);
typedef VALUE (*Window_viewport_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_windowskin_gareproto)(VALUE);
typedef VALUE (*Window_windowskin_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_contents_gareproto)(VALUE);
typedef VALUE (*Window_contents_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_cursor_rect_gareproto)(VALUE);
typedef VALUE (*Window_cursor_rect_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_active_gareproto)(VALUE);
typedef VALUE (*Window_active_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_visible_gareproto)(VALUE);
typedef VALUE (*Window_visible_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_arrows_visible_gareproto)(VALUE);
typedef VALUE (*Window_arrows_visible_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_pause_gareproto)(VALUE);
typedef VALUE (*Window_pause_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_x_gareproto)(VALUE);
typedef VALUE (*Window_x_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_y_gareproto)(VALUE);
typedef VALUE (*Window_y_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_width_gareproto)(VALUE);
typedef VALUE (*Window_width_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_height_gareproto)(VALUE);
typedef VALUE (*Window_height_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_z_gareproto)(VALUE);
typedef VALUE (*Window_z_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_ox_gareproto)(VALUE);
typedef VALUE (*Window_ox_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_oy_gareproto)(VALUE);
typedef VALUE (*Window_oy_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_padding_gareproto)(VALUE);
typedef VALUE (*Window_padding_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_padding_bottom_gareproto)(VALUE);
typedef VALUE (*Window_padding_bottom_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_opacity_gareproto)(VALUE);
typedef VALUE (*Window_opacity_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_back_opacity_gareproto)(VALUE);
typedef VALUE (*Window_back_opacity_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_contents_opacity_gareproto)(VALUE);
typedef VALUE (*Window_contents_opacity_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_openness_gareproto)(VALUE);
typedef VALUE (*Window_openness_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_tone_gareproto)(VALUE);
typedef VALUE (*Window_tone_set_gareproto)(VALUE, VALUE);
typedef VALUE (*Window_initialize_gareproto)(ANYARGS);
// RGSSError Functions
typedef VALUE (*RGSSError_exception_gareproto)(ANYARGS);
typedef VALUE (*RGSSError_message_gareproto)(VALUE);
typedef VALUE (*RGSSError_backtrace_gareproto)(VALUE);
typedef VALUE (*RGSSError_set_backtrace_gareproto)(VALUE, VALUE);
typedef VALUE (*RGSSError_initialize_gareproto)(ANYARGS);
// RGSSReset Functions
typedef VALUE (*RGSSReset_exception_gareproto)(ANYARGS);
typedef VALUE (*RGSSReset_message_gareproto)(VALUE);
typedef VALUE (*RGSSReset_backtrace_gareproto)(VALUE);
typedef VALUE (*RGSSReset_set_backtrace_gareproto)(VALUE, VALUE);
typedef VALUE (*RGSSReset_initialize_gareproto)(ANYARGS);
// Audio Functions
typedef VALUE (*Audio___reset___gareproto)();
typedef VALUE (*Audio_setup_midi_gareproto)();
typedef VALUE (*Audio_bgm_play_gareproto)(ANYARGS);
typedef VALUE (*Audio_bgm_stop_gareproto)();
typedef VALUE (*Audio_bgm_fade_gareproto)(VALUE);
typedef VALUE (*Audio_bgm_pos_gareproto)();
typedef VALUE (*Audio_bgs_play_gareproto)(ANYARGS);
typedef VALUE (*Audio_bgs_stop_gareproto)();
typedef VALUE (*Audio_bgs_fade_gareproto)(VALUE);
typedef VALUE (*Audio_bgs_pos_gareproto)();
typedef VALUE (*Audio_me_play_gareproto)(ANYARGS);
typedef VALUE (*Audio_me_stop_gareproto)();
typedef VALUE (*Audio_me_fade_gareproto)(VALUE);
typedef VALUE (*Audio_se_play_gareproto)(ANYARGS);
typedef VALUE (*Audio_se_stop_gareproto)();
// Graphics Functions
typedef VALUE (*Graphics___reset___gareproto)();
typedef VALUE (*Graphics_update_gareproto)();
typedef VALUE (*Graphics_wait_gareproto)(VALUE);
typedef VALUE (*Graphics_fadeout_gareproto)(VALUE);
typedef VALUE (*Graphics_fadein_gareproto)(VALUE);
typedef VALUE (*Graphics_transition_gareproto)(ANYARGS);
typedef VALUE (*Graphics_snap_to_bitmap_gareproto)();
typedef VALUE (*Graphics_frame_reset_gareproto)();
typedef VALUE (*Graphics_resize_screen_gareproto)(VALUE, VALUE);
typedef VALUE (*Graphics_play_movie_gareproto)(VALUE);
typedef VALUE (*Graphics_width_gareproto)();
typedef VALUE (*Graphics_height_gareproto)();
typedef VALUE (*Graphics_frame_rate_gareproto)();
typedef VALUE (*Graphics_frame_rate_set_gareproto)(VALUE);
typedef VALUE (*Graphics_frame_count_gareproto)();
typedef VALUE (*Graphics_frame_count_set_gareproto)(VALUE);
typedef VALUE (*Graphics_brightness_gareproto)();
typedef VALUE (*Graphics_brightness_set_gareproto)(VALUE);
typedef VALUE (*Graphics_visible_gareproto)();
typedef VALUE (*Graphics_visible_set_gareproto)(VALUE);
// Input Functions
typedef VALUE (*Input_update_gareproto)();
typedef VALUE (*Input_is_press_gareproto)(VALUE);
typedef VALUE (*Input_is_trigger_gareproto)(VALUE);
typedef VALUE (*Input_is_repeat_gareproto)(VALUE);
typedef VALUE (*Input_dir4_gareproto)();
typedef VALUE (*Input_dir8_gareproto)();



// Static Objects

// Class Allocation Method
static Class_allocate_gareproto Class_allocate;
// Bitmap Functions
static Bitmap_dispose_gareproto Bitmap_dispose;
static Bitmap_is_disposed_gareproto Bitmap_is_disposed;
static Bitmap_width_gareproto Bitmap_width;
static Bitmap_height_gareproto Bitmap_height;
static Bitmap_rect_gareproto Bitmap_rect;
static Bitmap_blt_gareproto Bitmap_blt;
static Bitmap_stretch_blt_gareproto Bitmap_stretch_blt;
static Bitmap_fill_rect_gareproto Bitmap_fill_rect;
static Bitmap_gradient_fill_rect_gareproto Bitmap_gradient_fill_rect;
static Bitmap_clear_gareproto Bitmap_clear;
static Bitmap_clear_rect_gareproto Bitmap_clear_rect;
static Bitmap_get_pixel_gareproto Bitmap_get_pixel;
static Bitmap_set_pixel_gareproto Bitmap_set_pixel;
static Bitmap_hue_change_gareproto Bitmap_hue_change;
static Bitmap_blur_gareproto Bitmap_blur;
static Bitmap_radial_blur_gareproto Bitmap_radial_blur;
static Bitmap_font_gareproto Bitmap_font;
static Bitmap_font_set_gareproto Bitmap_font_set;
static Bitmap_draw_text_gareproto Bitmap_draw_text;
static Bitmap_text_size_gareproto Bitmap_text_size;
static Bitmap_initialize_gareproto Bitmap_initialize;
// Color Functions
static Color__load_gareproto Color__load;
static Color_set_gareproto Color_set;
static Color__dump_gareproto Color__dump;
static Color_red_gareproto Color_red;
static Color_red_set_gareproto Color_red_set;
static Color_green_gareproto Color_green;
static Color_green_set_gareproto Color_green_set;
static Color_blue_gareproto Color_blue;
static Color_blue_set_gareproto Color_blue_set;
static Color_alpha_gareproto Color_alpha;
static Color_alpha_set_gareproto Color_alpha_set;
static Color_initialize_gareproto Color_initialize;
// Font Functions
static Font_name_gareproto Font_name;
static Font_name_set_gareproto Font_name_set;
static Font_size_gareproto Font_size;
static Font_size_set_gareproto Font_size_set;
static Font_bold_gareproto Font_bold;
static Font_bold_set_gareproto Font_bold_set;
static Font_italic_gareproto Font_italic;
static Font_italic_set_gareproto Font_italic_set;
static Font_outline_gareproto Font_outline;
static Font_outline_set_gareproto Font_outline_set;
static Font_shadow_gareproto Font_shadow;
static Font_shadow_set_gareproto Font_shadow_set;
static Font_color_gareproto Font_color;
static Font_color_set_gareproto Font_color_set;
static Font_out_color_gareproto Font_out_color;
static Font_out_color_set_gareproto Font_out_color_set;
static Font_initialize_gareproto Font_initialize;
// Plane Functions
static Plane_dispose_gareproto Plane_dispose;
static Plane_is_disposed_gareproto Plane_is_disposed;
static Plane_viewport_gareproto Plane_viewport;
static Plane_viewport_set_gareproto Plane_viewport_set;
static Plane_bitmap_gareproto Plane_bitmap;
static Plane_bitmap_set_gareproto Plane_bitmap_set;
static Plane_visible_gareproto Plane_visible;
static Plane_visible_set_gareproto Plane_visible_set;
static Plane_z_gareproto Plane_z;
static Plane_z_set_gareproto Plane_z_set;
static Plane_ox_gareproto Plane_ox;
static Plane_ox_set_gareproto Plane_ox_set;
static Plane_oy_gareproto Plane_oy;
static Plane_oy_set_gareproto Plane_oy_set;
static Plane_zoom_x_gareproto Plane_zoom_x;
static Plane_zoom_x_set_gareproto Plane_zoom_x_set;
static Plane_zoom_y_gareproto Plane_zoom_y;
static Plane_zoom_y_set_gareproto Plane_zoom_y_set;
static Plane_opacity_gareproto Plane_opacity;
static Plane_opacity_set_gareproto Plane_opacity_set;
static Plane_blend_type_gareproto Plane_blend_type;
static Plane_blend_type_set_gareproto Plane_blend_type_set;
static Plane_color_gareproto Plane_color;
static Plane_color_set_gareproto Plane_color_set;
static Plane_tone_gareproto Plane_tone;
static Plane_tone_set_gareproto Plane_tone_set;
static Plane_initialize_gareproto Plane_initialize;
// Rect Functions
static Rect__load_gareproto Rect__load;
static Rect_set_gareproto Rect_set;
static Rect_empty_gareproto Rect_empty;
static Rect__dump_gareproto Rect__dump;
static Rect_x_gareproto Rect_x;
static Rect_x_set_gareproto Rect_x_set;
static Rect_y_gareproto Rect_y;
static Rect_y_set_gareproto Rect_y_set;
static Rect_width_gareproto Rect_width;
static Rect_width_set_gareproto Rect_width_set;
static Rect_height_gareproto Rect_height;
static Rect_height_set_gareproto Rect_height_set;
static Rect_initialize_gareproto Rect_initialize;
// Sprite Functions
static Sprite_dispose_gareproto Sprite_dispose;
static Sprite_is_disposed_gareproto Sprite_is_disposed;
static Sprite_flash_gareproto Sprite_flash;
static Sprite_update_gareproto Sprite_update;
static Sprite_width_gareproto Sprite_width;
static Sprite_height_gareproto Sprite_height;
static Sprite_viewport_gareproto Sprite_viewport;
static Sprite_viewport_set_gareproto Sprite_viewport_set;
static Sprite_bitmap_gareproto Sprite_bitmap;
static Sprite_bitmap_set_gareproto Sprite_bitmap_set;
static Sprite_src_rect_gareproto Sprite_src_rect;
static Sprite_src_rect_set_gareproto Sprite_src_rect_set;
static Sprite_visible_gareproto Sprite_visible;
static Sprite_visible_set_gareproto Sprite_visible_set;
static Sprite_x_gareproto Sprite_x;
static Sprite_x_set_gareproto Sprite_x_set;
static Sprite_y_gareproto Sprite_y;
static Sprite_y_set_gareproto Sprite_y_set;
static Sprite_z_gareproto Sprite_z;
static Sprite_z_set_gareproto Sprite_z_set;
static Sprite_ox_gareproto Sprite_ox;
static Sprite_ox_set_gareproto Sprite_ox_set;
static Sprite_oy_gareproto Sprite_oy;
static Sprite_oy_set_gareproto Sprite_oy_set;
static Sprite_zoom_x_gareproto Sprite_zoom_x;
static Sprite_zoom_x_set_gareproto Sprite_zoom_x_set;
static Sprite_zoom_y_gareproto Sprite_zoom_y;
static Sprite_zoom_y_set_gareproto Sprite_zoom_y_set;
static Sprite_angle_gareproto Sprite_angle;
static Sprite_angle_set_gareproto Sprite_angle_set;
static Sprite_wave_amp_gareproto Sprite_wave_amp;
static Sprite_wave_amp_set_gareproto Sprite_wave_amp_set;
static Sprite_wave_length_gareproto Sprite_wave_length;
static Sprite_wave_length_set_gareproto Sprite_wave_length_set;
static Sprite_wave_speed_gareproto Sprite_wave_speed;
static Sprite_wave_speed_set_gareproto Sprite_wave_speed_set;
static Sprite_wave_phase_gareproto Sprite_wave_phase;
static Sprite_wave_phase_set_gareproto Sprite_wave_phase_set;
static Sprite_mirror_gareproto Sprite_mirror;
static Sprite_mirror_set_gareproto Sprite_mirror_set;
static Sprite_bush_depth_gareproto Sprite_bush_depth;
static Sprite_bush_depth_set_gareproto Sprite_bush_depth_set;
static Sprite_bush_opacity_gareproto Sprite_bush_opacity;
static Sprite_bush_opacity_set_gareproto Sprite_bush_opacity_set;
static Sprite_opacity_gareproto Sprite_opacity;
static Sprite_opacity_set_gareproto Sprite_opacity_set;
static Sprite_blend_type_gareproto Sprite_blend_type;
static Sprite_blend_type_set_gareproto Sprite_blend_type_set;
static Sprite_color_gareproto Sprite_color;
static Sprite_color_set_gareproto Sprite_color_set;
static Sprite_tone_gareproto Sprite_tone;
static Sprite_tone_set_gareproto Sprite_tone_set;
static Sprite_initialize_gareproto Sprite_initialize;
// Table Functions
static Table__load_gareproto Table__load;
static Table_resize_gareproto Table_resize;
static Table__dump_gareproto Table__dump;
static Table_aref_gareproto Table_aref;
static Table_aref_set_gareproto Table_aref_set;
static Table_xsize_gareproto Table_xsize;
static Table_ysize_gareproto Table_ysize;
static Table_zsize_gareproto Table_zsize;
static Table_initialize_gareproto Table_initialize;
// Tilemap Functions
static Tilemap_dispose_gareproto Tilemap_dispose;
static Tilemap_is_disposed_gareproto Tilemap_is_disposed;
static Tilemap_update_gareproto Tilemap_update;
static Tilemap_viewport_gareproto Tilemap_viewport;
static Tilemap_viewport_set_gareproto Tilemap_viewport_set;
static Tilemap_bitmaps_gareproto Tilemap_bitmaps;
static Tilemap_map_data_gareproto Tilemap_map_data;
static Tilemap_map_data_set_gareproto Tilemap_map_data_set;
static Tilemap_flash_data_gareproto Tilemap_flash_data;
static Tilemap_flash_data_set_gareproto Tilemap_flash_data_set;
static Tilemap_flags_gareproto Tilemap_flags;
static Tilemap_flags_set_gareproto Tilemap_flags_set;
static Tilemap_visible_gareproto Tilemap_visible;
static Tilemap_visible_set_gareproto Tilemap_visible_set;
static Tilemap_ox_gareproto Tilemap_ox;
static Tilemap_ox_set_gareproto Tilemap_ox_set;
static Tilemap_oy_gareproto Tilemap_oy;
static Tilemap_oy_set_gareproto Tilemap_oy_set;
static Tilemap_initialize_gareproto Tilemap_initialize;
// Tone Functions
static Tone__load_gareproto Tone__load;
static Tone_set_gareproto Tone_set;
static Tone__dump_gareproto Tone__dump;
static Tone_red_gareproto Tone_red;
static Tone_red_set_gareproto Tone_red_set;
static Tone_green_gareproto Tone_green;
static Tone_green_set_gareproto Tone_green_set;
static Tone_blue_gareproto Tone_blue;
static Tone_blue_set_gareproto Tone_blue_set;
static Tone_gray_gareproto Tone_gray;
static Tone_gray_set_gareproto Tone_gray_set;
static Tone_initialize_gareproto Tone_initialize;
// Viewport Functions
static Viewport_dispose_gareproto Viewport_dispose;
static Viewport_flash_gareproto Viewport_flash;
static Viewport_update_gareproto Viewport_update;
static Viewport_rect_gareproto Viewport_rect;
static Viewport_rect_set_gareproto Viewport_rect_set;
static Viewport_visible_gareproto Viewport_visible;
static Viewport_visible_set_gareproto Viewport_visible_set;
static Viewport_z_gareproto Viewport_z;
static Viewport_z_set_gareproto Viewport_z_set;
static Viewport_ox_gareproto Viewport_ox;
static Viewport_ox_set_gareproto Viewport_ox_set;
static Viewport_oy_gareproto Viewport_oy;
static Viewport_oy_set_gareproto Viewport_oy_set;
static Viewport_color_gareproto Viewport_color;
static Viewport_color_set_gareproto Viewport_color_set;
static Viewport_tone_gareproto Viewport_tone;
static Viewport_tone_set_gareproto Viewport_tone_set;
static Viewport_initialize_gareproto Viewport_initialize;
// Window Functions
static Window_dispose_gareproto Window_dispose;
static Window_is_disposed_gareproto Window_is_disposed;
static Window_update_gareproto Window_update;
static Window_move_gareproto Window_move;
static Window_is_open_gareproto Window_is_open;
static Window_is_close_gareproto Window_is_close;
static Window_viewport_gareproto Window_viewport;
static Window_viewport_set_gareproto Window_viewport_set;
static Window_windowskin_gareproto Window_windowskin;
static Window_windowskin_set_gareproto Window_windowskin_set;
static Window_contents_gareproto Window_contents;
static Window_contents_set_gareproto Window_contents_set;
static Window_cursor_rect_gareproto Window_cursor_rect;
static Window_cursor_rect_set_gareproto Window_cursor_rect_set;
static Window_active_gareproto Window_active;
static Window_active_set_gareproto Window_active_set;
static Window_visible_gareproto Window_visible;
static Window_visible_set_gareproto Window_visible_set;
static Window_arrows_visible_gareproto Window_arrows_visible;
static Window_arrows_visible_set_gareproto Window_arrows_visible_set;
static Window_pause_gareproto Window_pause;
static Window_pause_set_gareproto Window_pause_set;
static Window_x_gareproto Window_x;
static Window_x_set_gareproto Window_x_set;
static Window_y_gareproto Window_y;
static Window_y_set_gareproto Window_y_set;
static Window_width_gareproto Window_width;
static Window_width_set_gareproto Window_width_set;
static Window_height_gareproto Window_height;
static Window_height_set_gareproto Window_height_set;
static Window_z_gareproto Window_z;
static Window_z_set_gareproto Window_z_set;
static Window_ox_gareproto Window_ox;
static Window_ox_set_gareproto Window_ox_set;
static Window_oy_gareproto Window_oy;
static Window_oy_set_gareproto Window_oy_set;
static Window_padding_gareproto Window_padding;
static Window_padding_set_gareproto Window_padding_set;
static Window_padding_bottom_gareproto Window_padding_bottom;
static Window_padding_bottom_set_gareproto Window_padding_bottom_set;
static Window_opacity_gareproto Window_opacity;
static Window_opacity_set_gareproto Window_opacity_set;
static Window_back_opacity_gareproto Window_back_opacity;
static Window_back_opacity_set_gareproto Window_back_opacity_set;
static Window_contents_opacity_gareproto Window_contents_opacity;
static Window_contents_opacity_set_gareproto Window_contents_opacity_set;
static Window_openness_gareproto Window_openness;
static Window_openness_set_gareproto Window_openness_set;
static Window_tone_gareproto Window_tone;
static Window_tone_set_gareproto Window_tone_set;
static Window_initialize_gareproto Window_initialize;
// RGSSError Functions
static RGSSError_exception_gareproto RGSSError_exception;
static RGSSError_message_gareproto RGSSError_message;
static RGSSError_backtrace_gareproto RGSSError_backtrace;
static RGSSError_set_backtrace_gareproto RGSSError_set_backtrace;
static RGSSError_initialize_gareproto RGSSError_initialize;
// RGSSReset Functions
static RGSSReset_exception_gareproto RGSSReset_exception;
static RGSSReset_message_gareproto RGSSReset_message;
static RGSSReset_backtrace_gareproto RGSSReset_backtrace;
static RGSSReset_set_backtrace_gareproto RGSSReset_set_backtrace;
static RGSSReset_initialize_gareproto RGSSReset_initialize;
// Audio Functions
static Audio___reset___gareproto Audio___reset__;
static Audio_setup_midi_gareproto Audio_setup_midi;
static Audio_bgm_play_gareproto Audio_bgm_play;
static Audio_bgm_stop_gareproto Audio_bgm_stop;
static Audio_bgm_fade_gareproto Audio_bgm_fade;
static Audio_bgm_pos_gareproto Audio_bgm_pos;
static Audio_bgs_play_gareproto Audio_bgs_play;
static Audio_bgs_stop_gareproto Audio_bgs_stop;
static Audio_bgs_fade_gareproto Audio_bgs_fade;
static Audio_bgs_pos_gareproto Audio_bgs_pos;
static Audio_me_play_gareproto Audio_me_play;
static Audio_me_stop_gareproto Audio_me_stop;
static Audio_me_fade_gareproto Audio_me_fade;
static Audio_se_play_gareproto Audio_se_play;
static Audio_se_stop_gareproto Audio_se_stop;
// Graphics Functions
static Graphics___reset___gareproto Graphics___reset__;
static Graphics_update_gareproto Graphics_update;
static Graphics_wait_gareproto Graphics_wait;
static Graphics_fadeout_gareproto Graphics_fadeout;
static Graphics_fadein_gareproto Graphics_fadein;
static Graphics_transition_gareproto Graphics_transition;
static Graphics_snap_to_bitmap_gareproto Graphics_snap_to_bitmap;
static Graphics_frame_reset_gareproto Graphics_frame_reset;
static Graphics_resize_screen_gareproto Graphics_resize_screen;
static Graphics_play_movie_gareproto Graphics_play_movie;
static Graphics_width_gareproto Graphics_width;
static Graphics_height_gareproto Graphics_height;
static Graphics_frame_rate_gareproto Graphics_frame_rate;
static Graphics_frame_rate_set_gareproto Graphics_frame_rate_set;
static Graphics_frame_count_gareproto Graphics_frame_count;
static Graphics_frame_count_set_gareproto Graphics_frame_count_set;
static Graphics_brightness_gareproto Graphics_brightness;
static Graphics_brightness_set_gareproto Graphics_brightness_set;
static Graphics_visible_gareproto Graphics_visible;
static Graphics_visible_set_gareproto Graphics_visible_set;
// Input Functions
static Input_update_gareproto Input_update;
static Input_is_press_gareproto Input_is_press;
static Input_is_trigger_gareproto Input_is_trigger;
static Input_is_repeat_gareproto Input_is_repeat;
static Input_dir4_gareproto Input_dir4;
static Input_dir8_gareproto Input_dir8;

// Started Flag
static char GAREStartFlag = 0;


// Start Function
void StartGARE(HMODULE RGSSDll){
	// Check start flag
	if (GAREStartFlag) return;
	GAREStartFlag = 1;

	// Class Allocation Method
	Class_allocate = (Class_allocate_gareproto)(RGSSDll + 0x33B50);

	// Bitmap Functions
	Bitmap_dispose = (Bitmap_dispose_gareproto)((char*)RGSSDll + 0x5BA0);
	Bitmap_is_disposed = (Bitmap_is_disposed_gareproto)((char*)RGSSDll + 0x5EA0);
	Bitmap_width = (Bitmap_width_gareproto)((char*)RGSSDll + 0x5EE0);
	Bitmap_height = (Bitmap_height_gareproto)((char*)RGSSDll + 0x5F10);
	Bitmap_rect = (Bitmap_rect_gareproto)((char*)RGSSDll + 0x5F40);
	Bitmap_blt = (Bitmap_blt_gareproto)((char*)RGSSDll + 0x5FA0);
	Bitmap_stretch_blt = (Bitmap_stretch_blt_gareproto)((char*)RGSSDll + 0x6200);
	Bitmap_fill_rect = (Bitmap_fill_rect_gareproto)((char*)RGSSDll + 0x6360);
	Bitmap_gradient_fill_rect = (Bitmap_gradient_fill_rect_gareproto)((char*)RGSSDll + 0x6500);
	Bitmap_clear = (Bitmap_clear_gareproto)((char*)RGSSDll + 0x6800);
	Bitmap_clear_rect = (Bitmap_clear_rect_gareproto)((char*)RGSSDll + 0x6840);
	Bitmap_get_pixel = (Bitmap_get_pixel_gareproto)((char*)RGSSDll + 0x6970);
	Bitmap_set_pixel = (Bitmap_set_pixel_gareproto)((char*)RGSSDll + 0x6A70);
	Bitmap_hue_change = (Bitmap_hue_change_gareproto)((char*)RGSSDll + 0x6BB0);
	Bitmap_blur = (Bitmap_blur_gareproto)((char*)RGSSDll + 0x6C20);
	Bitmap_radial_blur = (Bitmap_radial_blur_gareproto)((char*)RGSSDll + 0x6C60);
	Bitmap_font = (Bitmap_font_gareproto)((char*)RGSSDll + 0x6CC0);
	Bitmap_font_set = (Bitmap_font_set_gareproto)((char*)RGSSDll + 0x6CF0);
	Bitmap_draw_text = (Bitmap_draw_text_gareproto)((char*)RGSSDll + 0x6F10);
	Bitmap_text_size = (Bitmap_text_size_gareproto)((char*)RGSSDll + 0x7500);
	Bitmap_initialize = (Bitmap_initialize_gareproto)((char*)RGSSDll + 0x5650);

	// Color Functions
	Color__load = (Color__load_gareproto)((char*)RGSSDll + 0x8EA0);
	Color_set = (Color_set_gareproto)((char*)RGSSDll + 0x8CC0);
	Color__dump = (Color__dump_gareproto)((char*)RGSSDll + 0x8E00);
	Color_red = (Color_red_gareproto)((char*)RGSSDll + 0x8FE0);
	Color_red_set = (Color_red_set_gareproto)((char*)RGSSDll + 0x9020);
	Color_green = (Color_green_gareproto)((char*)RGSSDll + 0x90F0);
	Color_green_set = (Color_green_set_gareproto)((char*)RGSSDll + 0x9130);
	Color_blue = (Color_blue_gareproto)((char*)RGSSDll + 0x9200);
	Color_blue_set = (Color_blue_set_gareproto)((char*)RGSSDll + 0x9240);
	Color_alpha = (Color_alpha_gareproto)((char*)RGSSDll + 0x9310);
	Color_alpha_set = (Color_alpha_set_gareproto)((char*)RGSSDll + 0x9350);
	Color_initialize = (Color_initialize_gareproto)((char*)RGSSDll + 0x8900);

	// Font Functions
	Font_name = (Font_name_gareproto)((char*)RGSSDll + 0xA100);
	Font_name_set = (Font_name_set_gareproto)((char*)RGSSDll + 0xA120);
	Font_size = (Font_size_gareproto)((char*)RGSSDll + 0xA330);
	Font_size_set = (Font_size_set_gareproto)((char*)RGSSDll + 0xA350);
	Font_bold = (Font_bold_gareproto)((char*)RGSSDll + 0xA3D0);
	Font_bold_set = (Font_bold_set_gareproto)((char*)RGSSDll + 0xA3F0);
	Font_italic = (Font_italic_gareproto)((char*)RGSSDll + 0xA490);
	Font_italic_set = (Font_italic_set_gareproto)((char*)RGSSDll + 0xA4B0);
	Font_outline = (Font_outline_gareproto)((char*)RGSSDll + 0xA5F0);
	Font_outline_set = (Font_outline_set_gareproto)((char*)RGSSDll + 0xA610);
	Font_shadow = (Font_shadow_gareproto)((char*)RGSSDll + 0xA540);
	Font_shadow_set = (Font_shadow_set_gareproto)((char*)RGSSDll + 0xA560);
	Font_color = (Font_color_gareproto)((char*)RGSSDll + 0xA6A0);
	Font_color_set = (Font_color_set_gareproto)((char*)RGSSDll + 0xA6C0);
	Font_out_color = (Font_out_color_gareproto)((char*)RGSSDll + 0xA780);
	Font_out_color_set = (Font_out_color_set_gareproto)((char*)RGSSDll + 0xA7A0);
	Font_initialize = (Font_initialize_gareproto)((char*)RGSSDll + 0x9AF0);

	// Plane Functions
	Plane_dispose = (Plane_dispose_gareproto)((char*)RGSSDll + 0x10950);
	Plane_is_disposed = (Plane_is_disposed_gareproto)((char*)RGSSDll + 0x109C0);
	Plane_viewport = (Plane_viewport_gareproto)((char*)RGSSDll + 0x10A70);
	Plane_viewport_set = (Plane_viewport_set_gareproto)((char*)RGSSDll + 0x10AA0);
	Plane_bitmap = (Plane_bitmap_gareproto)((char*)RGSSDll + 0x10A00);
	Plane_bitmap_set = (Plane_bitmap_set_gareproto)((char*)RGSSDll + 0x10B70);
	Plane_visible = (Plane_visible_gareproto)((char*)RGSSDll + 0x10C40);
	Plane_visible_set = (Plane_visible_set_gareproto)((char*)RGSSDll + 0x10C80);
	Plane_z = (Plane_z_gareproto)((char*)RGSSDll + 0x10D00);
	Plane_z_set = (Plane_z_set_gareproto)((char*)RGSSDll + 0x10D30);
	Plane_ox = (Plane_ox_gareproto)((char*)RGSSDll + 0x10D80);
	Plane_ox_set = (Plane_ox_set_gareproto)((char*)RGSSDll + 0x10DB0);
	Plane_oy = (Plane_oy_gareproto)((char*)RGSSDll + 0x10DF0);
	Plane_oy_set = (Plane_oy_set_gareproto)((char*)RGSSDll + 0x10E20);
	Plane_zoom_x = (Plane_zoom_x_gareproto)((char*)RGSSDll + 0x10E60);
	Plane_zoom_x_set = (Plane_zoom_x_set_gareproto)((char*)RGSSDll + 0x10E90);
	Plane_zoom_y = (Plane_zoom_y_gareproto)((char*)RGSSDll + 0x10ED0);
	Plane_zoom_y_set = (Plane_zoom_y_set_gareproto)((char*)RGSSDll + 0x10F00);
	Plane_opacity = (Plane_opacity_gareproto)((char*)RGSSDll + 0x10F40);
	Plane_opacity_set = (Plane_opacity_set_gareproto)((char*)RGSSDll + 0x10F80);
	Plane_blend_type = (Plane_blend_type_gareproto)((char*)RGSSDll + 0x10FF0);
	Plane_blend_type_set = (Plane_blend_type_set_gareproto)((char*)RGSSDll + 0x11030);
	Plane_color = (Plane_color_gareproto)((char*)RGSSDll + 0x110B0);
	Plane_color_set = (Plane_color_set_gareproto)((char*)RGSSDll + 0x110E0);
	Plane_tone = (Plane_tone_gareproto)((char*)RGSSDll + 0x111E0);
	Plane_tone_set = (Plane_tone_set_gareproto)((char*)RGSSDll + 0x11210);
	Plane_initialize = (Plane_initialize_gareproto)((char*)RGSSDll + 0x10790);

	// Rect Functions
	Rect__load = (Rect__load_gareproto)((char*)RGSSDll + 0x11B70);
	Rect_set = (Rect_set_gareproto)((char*)RGSSDll + 0x118F0);
	Rect_empty = (Rect_empty_gareproto)((char*)RGSSDll + 0x119E0);
	Rect__dump = (Rect__dump_gareproto)((char*)RGSSDll + 0x11AD0);
	Rect_x = (Rect_x_gareproto)((char*)RGSSDll + 0x11C00);
	Rect_x_set = (Rect_x_set_gareproto)((char*)RGSSDll + 0x11C30);
	Rect_y = (Rect_y_gareproto)((char*)RGSSDll + 0x11C80);
	Rect_y_set = (Rect_y_set_gareproto)((char*)RGSSDll + 0x11CB0);
	Rect_width = (Rect_width_gareproto)((char*)RGSSDll + 0x11D00);
	Rect_width_set = (Rect_width_set_gareproto)((char*)RGSSDll + 0x11D30);
	Rect_height = (Rect_height_gareproto)((char*)RGSSDll + 0x11D80);
	Rect_height_set = (Rect_height_set_gareproto)((char*)RGSSDll + 0x11DB0);
	Rect_initialize = (Rect_initialize_gareproto)((char*)RGSSDll + 0x11780);

	// Sprite Functions
	Sprite_dispose = (Sprite_dispose_gareproto)((char*)RGSSDll + 0x128F0);
	Sprite_is_disposed = (Sprite_is_disposed_gareproto)((char*)RGSSDll + 0x12960);
	Sprite_flash = (Sprite_flash_gareproto)((char*)RGSSDll + 0x129A0);
	Sprite_update = (Sprite_update_gareproto)((char*)RGSSDll + 0x12AB0);
	Sprite_width = (Sprite_width_gareproto)((char*)RGSSDll + 0x12AE0);
	Sprite_height = (Sprite_height_gareproto)((char*)RGSSDll + 0x12B40);
	Sprite_viewport = (Sprite_viewport_gareproto)((char*)RGSSDll + 0x12BA0);
	Sprite_viewport_set = (Sprite_viewport_set_gareproto)((char*)RGSSDll + 0x12BD0);
	Sprite_bitmap = (Sprite_bitmap_gareproto)((char*)RGSSDll + 0x12CA0);
	Sprite_bitmap_set = (Sprite_bitmap_set_gareproto)((char*)RGSSDll + 0x12CE0);
	Sprite_src_rect = (Sprite_src_rect_gareproto)((char*)RGSSDll + 0x12E30);
	Sprite_src_rect_set = (Sprite_src_rect_set_gareproto)((char*)RGSSDll + 0x12E60);
	Sprite_visible = (Sprite_visible_gareproto)((char*)RGSSDll + 0x12F50);
	Sprite_visible_set = (Sprite_visible_set_gareproto)((char*)RGSSDll + 0x12F90);
	Sprite_x = (Sprite_x_gareproto)((char*)RGSSDll + 0x13010);
	Sprite_x_set = (Sprite_x_set_gareproto)((char*)RGSSDll + 0x13040);
	Sprite_y = (Sprite_y_gareproto)((char*)RGSSDll + 0x13080);
	Sprite_y_set = (Sprite_y_set_gareproto)((char*)RGSSDll + 0x130B0);
	Sprite_z = (Sprite_z_gareproto)((char*)RGSSDll + 0x130F0);
	Sprite_z_set = (Sprite_z_set_gareproto)((char*)RGSSDll + 0x13120);
	Sprite_ox = (Sprite_ox_gareproto)((char*)RGSSDll + 0x13170);
	Sprite_ox_set = (Sprite_ox_set_gareproto)((char*)RGSSDll + 0x131A0);
	Sprite_oy = (Sprite_oy_gareproto)((char*)RGSSDll + 0x131E0);
	Sprite_oy_set = (Sprite_oy_set_gareproto)((char*)RGSSDll + 0x13210);
	Sprite_zoom_x = (Sprite_zoom_x_gareproto)((char*)RGSSDll + 0x13250);
	Sprite_zoom_x_set = (Sprite_zoom_x_set_gareproto)((char*)RGSSDll + 0x13280);
	Sprite_zoom_y = (Sprite_zoom_y_gareproto)((char*)RGSSDll + 0x132C0);
	Sprite_zoom_y_set = (Sprite_zoom_y_set_gareproto)((char*)RGSSDll + 0x132F0);
	Sprite_angle = (Sprite_angle_gareproto)((char*)RGSSDll + 0x13330);
	Sprite_angle_set = (Sprite_angle_set_gareproto)((char*)RGSSDll + 0x13360);
	Sprite_wave_amp = (Sprite_wave_amp_gareproto)((char*)RGSSDll + 0x133A0);
	Sprite_wave_amp_set = (Sprite_wave_amp_set_gareproto)((char*)RGSSDll + 0x133D0);
	Sprite_wave_length = (Sprite_wave_length_gareproto)((char*)RGSSDll + 0x13410);
	Sprite_wave_length_set = (Sprite_wave_length_set_gareproto)((char*)RGSSDll + 0x13440);
	Sprite_wave_speed = (Sprite_wave_speed_gareproto)((char*)RGSSDll + 0x13480);
	Sprite_wave_speed_set = (Sprite_wave_speed_set_gareproto)((char*)RGSSDll + 0x134B0);
	Sprite_wave_phase = (Sprite_wave_phase_gareproto)((char*)RGSSDll + 0x134F0);
	Sprite_wave_phase_set = (Sprite_wave_phase_set_gareproto)((char*)RGSSDll + 0x13520);
	Sprite_mirror = (Sprite_mirror_gareproto)((char*)RGSSDll + 0x13560);
	Sprite_mirror_set = (Sprite_mirror_set_gareproto)((char*)RGSSDll + 0x135A0);
	Sprite_bush_depth = (Sprite_bush_depth_gareproto)((char*)RGSSDll + 0x13610);
	Sprite_bush_depth_set = (Sprite_bush_depth_set_gareproto)((char*)RGSSDll + 0x13640);
	Sprite_bush_opacity = (Sprite_bush_opacity_gareproto)((char*)RGSSDll + 0x13680);
	Sprite_bush_opacity_set = (Sprite_bush_opacity_set_gareproto)((char*)RGSSDll + 0x136B0);
	Sprite_opacity = (Sprite_opacity_gareproto)((char*)RGSSDll + 0x136F0);
	Sprite_opacity_set = (Sprite_opacity_set_gareproto)((char*)RGSSDll + 0x13730);
	Sprite_blend_type = (Sprite_blend_type_gareproto)((char*)RGSSDll + 0x137A0);
	Sprite_blend_type_set = (Sprite_blend_type_set_gareproto)((char*)RGSSDll + 0x137E0);
	Sprite_color = (Sprite_color_gareproto)((char*)RGSSDll + 0x13860);
	Sprite_color_set = (Sprite_color_set_gareproto)((char*)RGSSDll + 0x13890);
	Sprite_tone = (Sprite_tone_gareproto)((char*)RGSSDll + 0x13990);
	Sprite_tone_set = (Sprite_tone_set_gareproto)((char*)RGSSDll + 0x139C0);
	Sprite_initialize = (Sprite_initialize_gareproto)((char*)RGSSDll + 0x126C0);

	// Table Functions
	Table__load = (Table__load_gareproto)((char*)RGSSDll + 0x14650);
	Table_resize = (Table_resize_gareproto)((char*)RGSSDll + 0x14300);
	Table__dump = (Table__dump_gareproto)((char*)RGSSDll + 0x14570);
	Table_aref = (Table_aref_gareproto)((char*)RGSSDll + 0x14750);
	Table_aref_set = (Table_aref_set_gareproto)((char*)RGSSDll + 0x14890);
	Table_xsize = (Table_xsize_gareproto)((char*)RGSSDll + 0x149F0);
	Table_ysize = (Table_ysize_gareproto)((char*)RGSSDll + 0x14A30);
	Table_zsize = (Table_zsize_gareproto)((char*)RGSSDll + 0x14A70);
	Table_initialize = (Table_initialize_gareproto)((char*)RGSSDll + 0x14010);

	// Tilemap Functions
	Tilemap_dispose = (Tilemap_dispose_gareproto)((char*)RGSSDll + 0x150F0);
	Tilemap_is_disposed = (Tilemap_is_disposed_gareproto)((char*)RGSSDll + 0x15160);
	Tilemap_update = (Tilemap_update_gareproto)((char*)RGSSDll + 0x151A0);
	Tilemap_viewport = (Tilemap_viewport_gareproto)((char*)RGSSDll + 0x15210);
	Tilemap_viewport_set = (Tilemap_viewport_set_gareproto)((char*)RGSSDll + 0x15240);
	Tilemap_bitmaps = (Tilemap_bitmaps_gareproto)((char*)RGSSDll + 0x15300);
	Tilemap_map_data = (Tilemap_map_data_gareproto)((char*)RGSSDll + 0x15500);
	Tilemap_map_data_set = (Tilemap_map_data_set_gareproto)((char*)RGSSDll + 0x15530);
	Tilemap_flash_data = (Tilemap_flash_data_gareproto)((char*)RGSSDll + 0x155D0);
	Tilemap_flash_data_set = (Tilemap_flash_data_set_gareproto)((char*)RGSSDll + 0x15600);
	Tilemap_flags = (Tilemap_flags_gareproto)((char*)RGSSDll + 0x156D0);
	Tilemap_flags_set = (Tilemap_flags_set_gareproto)((char*)RGSSDll + 0x15700);
	Tilemap_visible = (Tilemap_visible_gareproto)((char*)RGSSDll + 0x15790);
	Tilemap_visible_set = (Tilemap_visible_set_gareproto)((char*)RGSSDll + 0x157D0);
	Tilemap_ox = (Tilemap_ox_gareproto)((char*)RGSSDll + 0x15840);
	Tilemap_ox_set = (Tilemap_ox_set_gareproto)((char*)RGSSDll + 0x15870);
	Tilemap_oy = (Tilemap_oy_gareproto)((char*)RGSSDll + 0x158B0);
	Tilemap_oy_set = (Tilemap_oy_set_gareproto)((char*)RGSSDll + 0x158E0);
	Tilemap_initialize = (Tilemap_initialize_gareproto)((char*)RGSSDll + 0x14F60);

	// Tone Functions
	Tone__load = (Tone__load_gareproto)((char*)RGSSDll + 0x163B0);
	Tone_set = (Tone_set_gareproto)((char*)RGSSDll + 0x161D0);
	Tone__dump = (Tone__dump_gareproto)((char*)RGSSDll + 0x16310);
	Tone_red = (Tone_red_gareproto)((char*)RGSSDll + 0x164F0);
	Tone_red_set = (Tone_red_set_gareproto)((char*)RGSSDll + 0x16530);
	Tone_green = (Tone_green_gareproto)((char*)RGSSDll + 0x16600);
	Tone_green_set = (Tone_green_set_gareproto)((char*)RGSSDll + 0x16640);
	Tone_blue = (Tone_blue_gareproto)((char*)RGSSDll + 0x16710);
	Tone_blue_set = (Tone_blue_set_gareproto)((char*)RGSSDll + 0x16750);
	Tone_gray = (Tone_gray_gareproto)((char*)RGSSDll + 0x16820);
	Tone_gray_set = (Tone_gray_set_gareproto)((char*)RGSSDll + 0x16860);
	Tone_initialize = (Tone_initialize_gareproto)((char*)RGSSDll + 0x15E10);

	// Viewport Functions
	Viewport_dispose = (Viewport_dispose_gareproto)((char*)RGSSDll + 0x17170);
	Viewport_flash = (Viewport_flash_gareproto)((char*)RGSSDll + 0x171B0);
	Viewport_update = (Viewport_update_gareproto)((char*)RGSSDll + 0x172C0);
	Viewport_rect = (Viewport_rect_gareproto)((char*)RGSSDll + 0x172F0);
	Viewport_rect_set = (Viewport_rect_set_gareproto)((char*)RGSSDll + 0x17320);
	Viewport_visible = (Viewport_visible_gareproto)((char*)RGSSDll + 0x17440);
	Viewport_visible_set = (Viewport_visible_set_gareproto)((char*)RGSSDll + 0x17480);
	Viewport_z = (Viewport_z_gareproto)((char*)RGSSDll + 0x17500);
	Viewport_z_set = (Viewport_z_set_gareproto)((char*)RGSSDll + 0x17530);
	Viewport_ox = (Viewport_ox_gareproto)((char*)RGSSDll + 0x17580);
	Viewport_ox_set = (Viewport_ox_set_gareproto)((char*)RGSSDll + 0x175B0);
	Viewport_oy = (Viewport_oy_gareproto)((char*)RGSSDll + 0x175F0);
	Viewport_oy_set = (Viewport_oy_set_gareproto)((char*)RGSSDll + 0x17620);
	Viewport_color = (Viewport_color_gareproto)((char*)RGSSDll + 0x17660);
	Viewport_color_set = (Viewport_color_set_gareproto)((char*)RGSSDll + 0x17690);
	Viewport_tone = (Viewport_tone_gareproto)((char*)RGSSDll + 0x17790);
	Viewport_tone_set = (Viewport_tone_set_gareproto)((char*)RGSSDll + 0x177C0);
	Viewport_initialize = (Viewport_initialize_gareproto)((char*)RGSSDll + 0x16E20);

	// Window Functions
	Window_dispose = (Window_dispose_gareproto)((char*)RGSSDll + 0x182F0);
	Window_is_disposed = (Window_is_disposed_gareproto)((char*)RGSSDll + 0x18360);
	Window_update = (Window_update_gareproto)((char*)RGSSDll + 0x183A0);
	Window_move = (Window_move_gareproto)((char*)RGSSDll + 0x18410);
	Window_is_open = (Window_is_open_gareproto)((char*)RGSSDll + 0x18490);
	Window_is_close = (Window_is_close_gareproto)((char*)RGSSDll + 0x184D0);
	Window_viewport = (Window_viewport_gareproto)((char*)RGSSDll + 0x18500);
	Window_viewport_set = (Window_viewport_set_gareproto)((char*)RGSSDll + 0x18530);
	Window_windowskin = (Window_windowskin_gareproto)((char*)RGSSDll + 0x185F0);
	Window_windowskin_set = (Window_windowskin_set_gareproto)((char*)RGSSDll + 0x18620);
	Window_contents = (Window_contents_gareproto)((char*)RGSSDll + 0x186D0);
	Window_contents_set = (Window_contents_set_gareproto)((char*)RGSSDll + 0x18700);
	Window_cursor_rect = (Window_cursor_rect_gareproto)((char*)RGSSDll + 0x187B0);
	Window_cursor_rect_set = (Window_cursor_rect_set_gareproto)((char*)RGSSDll + 0x187E0);
	Window_active = (Window_active_gareproto)((char*)RGSSDll + 0x188D0);
	Window_active_set = (Window_active_set_gareproto)((char*)RGSSDll + 0x18910);
	Window_visible = (Window_visible_gareproto)((char*)RGSSDll + 0x18970);
	Window_visible_set = (Window_visible_set_gareproto)((char*)RGSSDll + 0x189B0);
	Window_arrows_visible = (Window_arrows_visible_gareproto)((char*)RGSSDll + 0x18A10);
	Window_arrows_visible_set = (Window_arrows_visible_set_gareproto)((char*)RGSSDll + 0x18A50);
	Window_pause = (Window_pause_gareproto)((char*)RGSSDll + 0x18AB0);
	Window_pause_set = (Window_pause_set_gareproto)((char*)RGSSDll + 0x18AF0);
	Window_x = (Window_x_gareproto)((char*)RGSSDll + 0x18B50);
	Window_x_set = (Window_x_set_gareproto)((char*)RGSSDll + 0x18B80);
	Window_y = (Window_y_gareproto)((char*)RGSSDll + 0x18BC0);
	Window_y_set = (Window_y_set_gareproto)((char*)RGSSDll + 0x18BF0);
	Window_width = (Window_width_gareproto)((char*)RGSSDll + 0x18C30);
	Window_width_set = (Window_width_set_gareproto)((char*)RGSSDll + 0x18C60);
	Window_height = (Window_height_gareproto)((char*)RGSSDll + 0x18CA0);
	Window_height_set = (Window_height_set_gareproto)((char*)RGSSDll + 0x18CD0);
	Window_z = (Window_z_gareproto)((char*)RGSSDll + 0x18D10);
	Window_z_set = (Window_z_set_gareproto)((char*)RGSSDll + 0x18D40);
	Window_ox = (Window_ox_gareproto)((char*)RGSSDll + 0x18D80);
	Window_ox_set = (Window_ox_set_gareproto)((char*)RGSSDll + 0x18DB0);
	Window_oy = (Window_oy_gareproto)((char*)RGSSDll + 0x18DF0);
	Window_oy_set = (Window_oy_set_gareproto)((char*)RGSSDll + 0x18E20);
	Window_padding = (Window_padding_gareproto)((char*)RGSSDll + 0x18E60);
	Window_padding_set = (Window_padding_set_gareproto)((char*)RGSSDll + 0x18E90);
	Window_padding_bottom = (Window_padding_bottom_gareproto)((char*)RGSSDll + 0x18EE0);
	Window_padding_bottom_set = (Window_padding_bottom_set_gareproto)((char*)RGSSDll + 0x18F10);
	Window_opacity = (Window_opacity_gareproto)((char*)RGSSDll + 0x18F50);
	Window_opacity_set = (Window_opacity_set_gareproto)((char*)RGSSDll + 0x18F80);
	Window_back_opacity = (Window_back_opacity_gareproto)((char*)RGSSDll + 0x18FC0);
	Window_back_opacity_set = (Window_back_opacity_set_gareproto)((char*)RGSSDll + 0x18FF0);
	Window_contents_opacity = (Window_contents_opacity_gareproto)((char*)RGSSDll + 0x19030);
	Window_contents_opacity_set = (Window_contents_opacity_set_gareproto)((char*)RGSSDll + 0x19060);
	Window_openness = (Window_openness_gareproto)((char*)RGSSDll + 0x190A0);
	Window_openness_set = (Window_openness_set_gareproto)((char*)RGSSDll + 0x190D0);
	Window_tone = (Window_tone_gareproto)((char*)RGSSDll + 0x19110);
	Window_tone_set = (Window_tone_set_gareproto)((char*)RGSSDll + 0x19140);
	Window_initialize = (Window_initialize_gareproto)((char*)RGSSDll + 0x180C0);

	// RGSSError Functions
	RGSSError_exception = (RGSSError_exception_gareproto)((char*)RGSSDll + 0x25900);
	RGSSError_message = (RGSSError_message_gareproto)((char*)RGSSDll + 0x25A30);
	RGSSError_backtrace = (RGSSError_backtrace_gareproto)((char*)RGSSDll + 0x25B20);
	RGSSError_set_backtrace = (RGSSError_set_backtrace_gareproto)((char*)RGSSDll + 0x27050);
	RGSSError_initialize = (RGSSError_initialize_gareproto)((char*)RGSSDll + 0x258B0);

	// RGSSReset Functions
	RGSSReset_exception = (RGSSReset_exception_gareproto)((char*)RGSSDll + 0x25900);
	RGSSReset_message = (RGSSReset_message_gareproto)((char*)RGSSDll + 0x25A30);
	RGSSReset_backtrace = (RGSSReset_backtrace_gareproto)((char*)RGSSDll + 0x25B20);
	RGSSReset_set_backtrace = (RGSSReset_set_backtrace_gareproto)((char*)RGSSDll + 0x27050);
	RGSSReset_initialize = (RGSSReset_initialize_gareproto)((char*)RGSSDll + 0x258B0);

	// Audio Functions
	Audio___reset__ = (Audio___reset___gareproto)((char*)RGSSDll + 0x49F0);
	Audio_setup_midi = (Audio_setup_midi_gareproto)((char*)RGSSDll + 0x4A00);
	Audio_bgm_play = (Audio_bgm_play_gareproto)((char*)RGSSDll + 0x4A40);
	Audio_bgm_stop = (Audio_bgm_stop_gareproto)((char*)RGSSDll + 0x4BE0);
	Audio_bgm_fade = (Audio_bgm_fade_gareproto)((char*)RGSSDll + 0x4C00);
	Audio_bgm_pos = (Audio_bgm_pos_gareproto)((char*)RGSSDll + 0x4C30);
	Audio_bgs_play = (Audio_bgs_play_gareproto)((char*)RGSSDll + 0x4C60);
	Audio_bgs_stop = (Audio_bgs_stop_gareproto)((char*)RGSSDll + 0x4E00);
	Audio_bgs_fade = (Audio_bgs_fade_gareproto)((char*)RGSSDll + 0x4E20);
	Audio_bgs_pos = (Audio_bgs_pos_gareproto)((char*)RGSSDll + 0x4E50);
	Audio_me_play = (Audio_me_play_gareproto)((char*)RGSSDll + 0x4E80);
	Audio_me_stop = (Audio_me_stop_gareproto)((char*)RGSSDll + 0x4FF0);
	Audio_me_fade = (Audio_me_fade_gareproto)((char*)RGSSDll + 0x5010);
	Audio_se_play = (Audio_se_play_gareproto)((char*)RGSSDll + 0x5040);
	Audio_se_stop = (Audio_se_stop_gareproto)((char*)RGSSDll + 0x51B0);

	// Graphics Functions
	Graphics___reset__ = (Graphics___reset___gareproto)((char*)RGSSDll + 0xAFF0);
	Graphics_update = (Graphics_update_gareproto)((char*)RGSSDll + 0xB000);
	Graphics_wait = (Graphics_wait_gareproto)((char*)RGSSDll + 0xB040);
	Graphics_fadeout = (Graphics_fadeout_gareproto)((char*)RGSSDll + 0xB090);
	Graphics_fadein = (Graphics_fadein_gareproto)((char*)RGSSDll + 0xB130);
	Graphics_transition = (Graphics_transition_gareproto)((char*)RGSSDll + 0xB280);
	Graphics_snap_to_bitmap = (Graphics_snap_to_bitmap_gareproto)((char*)RGSSDll + 0xB7B0);
	Graphics_frame_reset = (Graphics_frame_reset_gareproto)((char*)RGSSDll + 0xB890);
	Graphics_resize_screen = (Graphics_resize_screen_gareproto)((char*)RGSSDll + 0xB8B0);
	Graphics_play_movie = (Graphics_play_movie_gareproto)((char*)RGSSDll + 0xB8F0);
	Graphics_width = (Graphics_width_gareproto)((char*)RGSSDll + 0xB9D0);
	Graphics_height = (Graphics_height_gareproto)((char*)RGSSDll + 0xB9F0);
	Graphics_frame_rate = (Graphics_frame_rate_gareproto)((char*)RGSSDll + 0xBA10);
	Graphics_frame_rate_set = (Graphics_frame_rate_set_gareproto)((char*)RGSSDll + 0xBA30);
	Graphics_frame_count = (Graphics_frame_count_gareproto)((char*)RGSSDll + 0xBA80);
	Graphics_frame_count_set = (Graphics_frame_count_set_gareproto)((char*)RGSSDll + 0xBAA0);
	Graphics_brightness = (Graphics_brightness_gareproto)((char*)RGSSDll + 0xBAD0);
	Graphics_brightness_set = (Graphics_brightness_set_gareproto)((char*)RGSSDll + 0xBB10);
	Graphics_visible = (Graphics_visible_gareproto)((char*)RGSSDll + 0xBB70);
	Graphics_visible_set = (Graphics_visible_set_gareproto)((char*)RGSSDll + 0xBBA0);

	// Input Functions
	Input_update = (Input_update_gareproto)((char*)RGSSDll + 0xC260);
	Input_is_press = (Input_is_press_gareproto)((char*)RGSSDll + 0xC280);
	Input_is_trigger = (Input_is_trigger_gareproto)((char*)RGSSDll + 0xC310);
	Input_is_repeat = (Input_is_repeat_gareproto)((char*)RGSSDll + 0xC350);
	Input_dir4 = (Input_dir4_gareproto)((char*)RGSSDll + 0xC390);
	Input_dir8 = (Input_dir8_gareproto)((char*)RGSSDll + 0xC3B0);

}